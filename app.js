const TelegramBot = require('node-telegram-bot-api');
const http = require('https');
const fs = require('fs');
const path = require('path');

// –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
const token = '7927813451:AAGxQbdLC9PRahY9EzNSJpYA10ywd6JD2cI'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
const bot = new TelegramBot(token, { polling: true });

bot.onText(/\/start/, (msg) => {
    bot.sendMessage(msg.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –≤ Instagram.');
});

bot.onText(
    /https:\/\/www\.instagram\.com\/reel\/([a-zA-Z0-9_-]+)/,
    (msg, match) => {
        const shortcode = match[1];
        const apiUrl = `https://instagram-bulk-scraper-latest.p.rapidapi.com/media_download_by_shortcode/${shortcode}`;

        const options = {
            method: 'GET',
            hostname: 'instagram-bulk-scraper-latest.p.rapidapi.com',
            port: null,
            path: `/media_download_by_shortcode/${shortcode}`,
            headers: {
                'x-rapidapi-key':
                    'acfd6b6cf4mshf0d04ae3dde86a6p1855e8jsn6a715c2c667d', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–ª—é—á
                'x-rapidapi-host':
                    'instagram-bulk-scraper-latest.p.rapidapi.com',
            },
        };

        const req = http.request(options, (res) => {
            const chunks = [];

            res.on('data', (chunk) => {
                chunks.push(chunk);
            });

            res.on('end', () => {
                const body = JSON.parse(Buffer.concat(chunks).toString());
                console.log(body); // –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç API –≤ –∫–æ–Ω—Å–æ–ª—å

                if (body.status === 'ok') {  // –≤–æ—Ç —Ç—É—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å—Ç–∞—Ç—É—Å –Ω–µ —Ç–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –∏ –æ–Ω –∏–¥–µ—Ç –¥–∞–ª—å–µ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —à–∞–≥–∏
                    const videoUrl = body.data.main_media_hd; // –ü–æ–ª—É—á–∞–µ–º URL –≤–∏–¥–µ–æ
                    const caption = body.data.caption; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥ –ø–æ—Å—Ç–æ–º

                    console.log('–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ:', videoUrl); // –õ–æ–≥–∏—Ä—É–µ–º URL –≤–∏–¥–µ–æ
                    console.log('–¢–µ–∫—Å—Ç –ø–æ–¥ –ø–æ—Å—Ç–æ–º:', caption); // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥ –ø–æ—Å—Ç–æ–º

                    if (videoUrl) {
                        const file = fs.createWriteStream(
                            path.join(__dirname, 'video.mp4')
                        );

                        http.get(videoUrl, (response) => {
                            response.pipe(file);

                            file.on('finish', () => {
                                file.close(() => {
                                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                                    const message = caption
                                        ? `üé• *–í–∏–¥–µ–æ:* [–°–∫–∞—á–∞—Ç—å](${videoUrl})\n\nüìù *–û–ø–∏—Å–∞–Ω–∏–µ:* ${caption}`
                                        : `üé• *–í–∏–¥–µ–æ:* [–°–∫–∞—á–∞—Ç—å](${videoUrl})\n\nüìù *–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.*`;

                                    bot.sendVideo(
                                        msg.chat.id,
                                        path.join(__dirname, 'video.mp4'),
                                        {
                                            caption: message,
                                            parse_mode: 'Markdown',
                                        }
                                    ).catch((err) => {
                                        console.error(
                                            '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ:',
                                            err.message
                                        );
                                        bot.sendMessage(
                                            msg.chat.id,
                                            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ.'
                                        );
                                    });
                                });
                            });
                        }).on('error', (err) => {
                            console.error(
                                '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ:',
                                err.message
                            );
                            bot.sendMessage(
                                msg.chat.id,
                                '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.'
                            );
                        });
                    } else {
                        bot.sendMessage(
                            msg.chat.id,
                            '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –≤–∏–¥–µ–æ.'
                        );
                    }
                } else {
                    bot.sendMessage(
                        msg.chat.id,
                        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.'
                    );
                }
            });
        });

        req.on('error', (error) => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
            bot.sendMessage(
                msg.chat.id,
                '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.'
            );
        });

        req.end();
    }
);

